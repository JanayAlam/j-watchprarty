{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "J Watchparty REST API",
    "description": "",
    "license": {
      "name": "MIT",
      "url": "https://github.com/softprops/openapi/blob/master/LICENSE"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Auth",
      "description": "API for the authentication in the system"
    }
  ],
  "schemas": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [ "Auth" ],
        "description": "Create new account in the system",
        "parameters": [
          {
            "name": "auth",
            "in": "body",
            "description": "Account that you want to create",
            "schema": {
              "$ref": "#/definitions/RegisterRequestModel"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New account created",
            "schema": {
              "$ref": "#/definitions/RegisterResponseModel"
            }
          },
          "400": {
            "description": "Invalid request body",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Unhandled error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [ "Auth" ],
        "description": "Login to an existing account in the system",
        "parameters": [
          {
            "name": "auth",
            "in": "body",
            "description": "Account information that you want to login",
            "schema": {
              "$ref": "#/definitions/LoginRequestModel"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New account created",
            "schema": {
              "$ref": "#/definitions/LoginResponseModel"
            }
          },
          "400": {
            "description": "Invalid request body",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "Invalid email address or password",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Unhandled error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "RegisterRequestModel": {
      "required": ["lastName", "firstName", "email", "password", "confirmPassword"],
      "properties": {
        "firstName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 30,
          "example": "First Name"
        },
        "lastName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 30,
          "example": "Last Name"
        },
        "email": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 150,
          "example": "u001@domain.com"
        },
        "password": {
          "type": "string",
          "minLength": 6
        },
        "confirmPassword": {
          "type": "string",
          "minLength": 6
        }
      }
    },
    "RegisterResponseModel": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Account created successfully"
        }
      }
    },
    "LoginRequestModel": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "minLength": 5,
          "maxLength": 150,
          "example": "u001@domain.com"
        },
        "password": {
          "type": "string",
          "minLength": 6
        }
      }
    },
    "LoginResponseModel": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Login successful"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MzghOGZmMjI3MmFiNzViMTQ3MWE3MSIsImVtZWlsIjoiZXhhbXBsZUBkb21haW4uY29tIiwiaWF0IjoxNjk4MTc2MDk1LCJleHAiOjE2OTgzNDg4OTV9.mwd1x2zz1uSVer_ofRyLag6QX9T-ofojETf8fsE4h81"
        }
      }
    },
    "ErrorResponseModel": {
      "properties": {
        "name": {
          "type": "string",
          "definitions": "Error type",
          "example": "ErrorType"
        },
        "message": {
          "type": "string",
          "example": "An error message"
        }
      }
    }
  }
}